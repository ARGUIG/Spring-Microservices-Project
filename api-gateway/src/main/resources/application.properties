spring.application.name=api-gateway

server.port=9000

## URI of the keycloak server
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-microservices-security-realm

## Eureka for service discovery
spring.cloud.config.enabled=false
spring.cloud.discovery.enabled=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.discovery.locator.enabled=true


## Aggregate all the RestAPI DOCS of OpenAPI http://localhost:9000/swagger-ui.html
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
# Product Service
springdoc.swagger-ui.urls[0].name=Product service
springdoc.swagger-ui.urls[0].url=/aggregate/product-service/v3/api-docs
# Order Service
springdoc.swagger-ui.urls[1].name=Order service
springdoc.swagger-ui.urls[1].url=/aggregate/order-service/v3/api-docs
# Inventory Service
springdoc.swagger-ui.urls[2].name=Inventory service
springdoc.swagger-ui.urls[2].url=/aggregate/inventory-service/v3/api-docs

## Resilience4j
# Actuator Endpoints
#Enable health indicators for circuit breakers in Spring Boot's health actuator
management.health.circuitbreakers.enabled=true
#Expose all actuator endpoints
management.endpoints.web.exposure.include=*
#Show detailed health information
management.endpoint.health.show-details=always

#Resilinece4j Properties
# Enable health indicators for circuit breakers
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
# Use count-based sliding window to switch to circuit-breaker
resilience4j.circuitbreaker.configs.default.slidingWindowType=COUNT_BASED
# Set the size of the sliding window to 10 calls
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
# Set the failure rate threshold to 50%. If 50% of the calls in the sliding window fail, the circuit breaker opens
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
# The circuit breaker will stay open for 5 seconds before transitioning to the half-open state
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
# In the half-open state, allow 3 calls to go through to test if the external system is recovered
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
# Enable automatic transition from open to half-open after the wait duration has passed
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
# Require at least 5 calls in the sliding window to calculate the failure rate (prevents premature decisions)
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5

##Resilience4J Timeout Properties : Set a timeout of 3 seconds, If an request takes longer, it is considered a failure
resilience4j.timelimiter.configs.default.timeout-duration=3s

#Resilience4J Retry Properties : Sometimes, the service can be unavailable due to a small network issue, so it's better to retry the call instead of directly activating the Circuit Breaker.
# Retry a failed call up to 3 times
resilience4j.retry.configs.default.max-attempts=3
# Wait 2 seconds between each retry attempt
resilience4j.retry.configs.default.wait-duration=2s

## Grafana
# metrics will be sent in the percentiles histogram format
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=product-service

# generate traces for 100% for all request (by default it is 10%)
management.tracing.sampling.probability=1.0

# Loki URL
loki.url=http://localhost:3100/loki/api/v1/push

product.service.url=http://localhost:8080
order.service.url=http://localhost:8081
inventory.service.url=http://localhost:8082