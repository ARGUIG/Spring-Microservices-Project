spring.application.name=notification-service
server.port=8083


##Mail Properties : Use Mail trap to test email notifications
spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=eab5ed1c0419fa
spring.mail.password=0c4943e6f7bdbb


## Kafka consumer properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notificationService
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.arguig.microservices.order.event.OrderPlacedEvent
spring.kafka.consumer.properties.schema.registry.url=http://127.0.0.1:8085
spring.kafka.consumer.properties.specific.avro.reader=true

## Grafana
management.endpoints.web.exposure.include=health, info, metrics, prometheus
# metrics will be sent in the percentiles histogram format
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=product-service

# generate traces for 100% for all request (by default it is 10%)
management.tracing.sampling.probability=1.0

# Loki URL
loki.url=http://localhost:3100/loki/api/v1/push